# Define os serviços (containers) que serão executados
services:
  # Nome do serviço: news-extractor
  news-extractor:
    # Nome do container: desafiotecnicoone4tech-news-extractor
    container_name: desafiotecnicoone4tech-news-extractor
    
    # Instruções para construir a imagem
    build:
      # Contexto: diretório atual (.)
      context: .
      # Dockerfile: usa o arquivo Dockerfile padrão
      dockerfile: Dockerfile
    
    # Volumes: mapeia diretórios/arquivos do host para o container
    volumes:
      # Mapeia a pasta ./images do host para /app/images no container
      # Isso permite persistir as imagens baixadas mesmo após o container ser removido
      - ./images:/app/images
      
      # Mapeia o arquivo Excel do host para o container
      # Permite que o arquivo seja acessado diretamente do host
      - ./news_results.xlsx:/app/news_results.xlsx

      # Mapeia a pasta ./logs do host para /app/logs no container
      - ./logs:/app/logs
    
    # Variáveis de ambiente que serão injetadas no container
    # Podem ser sobrescritas via linha de comando ou arquivo .env
    environment:
      - API_KEY=${API_KEY}
      - API_URL=${API_URL}
      - IMAGE_BASE_URL=${IMAGE_BASE_URL}
      - EXCEL_PATH=${EXCEL_PATH}
      - IMAGES_DIR=${IMAGES_DIR}
      - LOG_DIR=${LOG_DIR}
      - SEARCH_PHRASE=${SEARCH_PHRASE}
      - CATEGORIES=${CATEGORIES}
      - MONTHS_TO_SEARCH=${MONTHS_TO_SEARCH}
      - PYTHONUNBUFFERED=1
    env_file:
      - .env 